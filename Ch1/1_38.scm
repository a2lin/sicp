(define (cont-frac n d k)
    (define (frac nk dk ck)
      (let ((num (n (- k ck)))
            (denom (d (- k ck)))
           )
           (if (= ck 0)
              (/ num denom)
              (/ num (+ denom (frac num denom (- ck 1))))
           )
      )
    )
    (frac 0 0 k)
)

(+ 2 (cont-frac (lambda (i) 1.0)
           (lambda (i) (if (= 1 (remainder i 3)) (* 2 (+ 1 (floor (/ i 3)))) 1))
           1000))
