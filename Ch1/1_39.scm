(define (cont-frac n d k)
    (define (frac nk dk ck)
      (let ((num (n (- k ck)))
            (denom (d (- k ck)))
           )
           (if (= ck 0)
              (/ num denom)
              (/ num (+ denom (frac num denom (- ck 1))))
           )
      )
    )
    (frac 0 0 k)
)

(define (tan-cf x k)
    (cont-frac (lambda (i) (if (= i 0) x (* (- 1.0) (* x x))))
               (lambda (i) (+ 1.0 (* i 2)))
               k))

(tan-cf 2.0 1000)
