(define (make-vect x y)
  (cons x y))
(define (xcor-vect vect)
  (car vect))
(define (ycor-vect vect)
  (cdr vect))
(define (add-vect vec1 vec2)
  (make-vect (+ (xcor-vect vec1) (xcor-vect vec2)) (+ (ycor-vect vec1) (ycor-vect vec2))))
(define (sub-vect vec1 vec2)
  (make-vect (- (xcor-vect vec1) (xcor-vect vec2)) (- (ycor-vect vec1) (ycor-vect vec2))))
(define (scale-vect scalar vec)
  (make-vect (* scalar (xcor-vect vec)) (* scalar (ycor-vect vec))))
(define (make-segment vec1 vec2)
  (cons vec1 vec2))
(define (start-segment segment)
  (car segment))
(define (end-segment segment)
  (cdr segment))
