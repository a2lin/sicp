(define (make-account balance password)
  (define (withdraw amount)
    (if (>= balance amount)
      (begin (set! balance (- balance amount))
             balance)
      "Insufficient Funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch user-password m)
    (if (eq? password user-password)
      (cond ((eq? m 'withdraw) withdraw)
            ((eq? m 'deposit) deposit)
            (else (error "Unknown request -- MAKE ACCOUNT"
                         m)))
      (lambda (x) "INCORRECT PASSWORD")))
  dispatch)

(define (make-joint account pass new-pass)
  (lambda (some-pass action)
    (if (eq? some-pass new-pass)
      (account pass action)
      (lambda (x) "INCORRECT PASSWORD"))))

(define acc (make-account 100 'secret-password))
((acc 'secret-password 'withdraw) 40)
((acc 'some-other-password 'deposit) 50)
(define joint-acc (make-joint acc 'secret-password 'joint-pass))
((joint-acc 'joint-pass 'deposit) 50)
((joint-acc 'not-joint-pass 'deposit) 50)
